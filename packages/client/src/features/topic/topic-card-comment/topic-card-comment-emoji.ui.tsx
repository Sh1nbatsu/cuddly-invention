import { useState, useEffect } from 'react'

interface Props {
  commentId: number
}

const availableEmojis = ['üëç', '‚ù§Ô∏è', 'üòÇ', 'üòÆ', 'üò¢']

export const TopicCardCommentEmoji = ({ commentId }: Props) => {
  const [reactions, setReactions] = useState<Record<string, number>>({})

  useEffect(() => {
    // TODO: –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    setReactions({
      'üëç': 1,
      '‚ù§Ô∏è': 2,
      'üòÇ': 0,
      'üòÆ': 0,
      'üò¢': 0,
    })
  }, [commentId])

  const handleReact = async (emoji: string) => {
    try {
      // TODO: sendReaction(commentId, emoji)

      setReactions(prev => ({
        ...prev,
        [emoji]: (prev[emoji] || 0) + 1,
      }))
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∞–∫—Ü–∏–∏', error)
    }
  }

  return (
    <div style={{ marginTop: 8 }}>
      {availableEmojis.map(emoji => (
        <button
          key={emoji}
          onClick={() => handleReact(emoji)}
          style={{
            marginRight: 8,
            fontSize: 18,
            background: 'none',
            border: 'none',
            cursor: 'pointer',
          }}>
          {emoji} {reactions[emoji] > 0 ? reactions[emoji] : ''}
        </button>
      ))}
    </div>
  )
}
