import { z } from 'zod'

export const RegisterSchema = z.object({
  first_name: z
    .string()
    .min(2, 'Имя должно содержать минимум 2 символа')
    .max(30, 'Имя не должно превышать 30 символов')
    .regex(/^[a-zA-Zа-яА-Я]+$/, 'Имя может содержать только буквы'),

  second_name: z
    .string()
    .min(2, 'Фамилия должна содержать минимум 2 символа')
    .max(30, 'Фамилия не должна превышать 30 символов')
    .regex(/^[a-zA-Zа-яА-Я]+$/, 'Фамилия может содержать только буквы'),

  login: z
    .string()
    .min(3, 'Логин должен содержать минимум 3 символа')
    .max(20, 'Логин не должен превышать 20 символов')
    .regex(
      /^[a-zA-Z0-9_]+$/,
      'Логин может содержать только буквы, цифры и подчеркивание'
    ),

  email: z
    .string()
    .email('Введите корректный email')
    .max(50, 'Email не должен превышать 50 символов'),

  password: z
    .string()
    .min(6, 'Пароль должен содержать минимум 6 символов')
    .max(30, 'Пароль не должен превышать 30 символов')
    .regex(/[A-Z]/, 'Пароль должен содержать хотя бы одну заглавную букву')
    .regex(/[0-9]/, 'Пароль должен содержать хотя бы одну цифру'),

  phone: z
    .string()
    .min(10, 'Телефон должен содержать минимум 10 цифр')
    .max(15, 'Телефон не должен превышать 15 символов')
    .regex(/^\+?[0-9]+$/, 'Телефон может содержать только цифры и знак +'),
})

export type RegisterFormData = z.infer<typeof RegisterSchema>

export const LoginSchema = z.object({
  email: z
    .string()
    .email('Введите корректный email')
    .max(50, 'Email не должен превышать 50 символов'),

  password: z
    .string()
    .min(6, 'Пароль должен содержать минимум 6 символов')
    .max(30, 'Пароль не должен превышать 30 символов')
    .regex(/[A-Z]/, 'Пароль должен содержать хотя бы одну заглавную букву')
    .regex(/[0-9]/, 'Пароль должен содержать хотя бы одну цифру'),
})

export type LoginFormData = z.infer<typeof LoginSchema>
