services:
  server-dev:
    container_name: prakticum-app-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    env_file: .env
    environment:
      NODE_ENV: development
      SERVER_PORT: ${SERVER_PORT}
      CLIENT_PORT: ${CLIENT_PORT}
    volumes:
      - ./packages:/app/packages
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./lerna.json:/app/lerna.json
      - ./vite.config.js:/app/vite.config.js
      - /app/node_modules
      - /app/packages/client/node_modules
      - /app/packages/server/node_modules
    command: yarn dev
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - '80:80' 
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./packages/client/dist/client:/usr/share/nginx/html:ro
    depends_on:
      - server-dev
    restart: unless-stopped   

volumes:
  postgres_data_dev:
